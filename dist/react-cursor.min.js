(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';
var arrayUniq = require('array-uniq');

module.exports = function () {
	return arrayUniq([].concat.apply([], arguments));
};

},{"array-uniq":2}],2:[function(require,module,exports){
(function (global){
'use strict';

// there's 3 implementations written in increasing order of efficiency

// 1 - no Set type is defined
function uniqNoSet(arr) {
	var ret = [];

	for (var i = 0; i < arr.length; i++) {
		if (ret.indexOf(arr[i]) === -1) {
			ret.push(arr[i]);
		}
	}

	return ret;
}

// 2 - a simple Set type is defined
function uniqSet(arr) {
	var seen = new Set();
	return arr.filter(function (el) {
		if (!seen.has(el)) {
			seen.add(el);
			return true;
		}
	});
}

// 3 - a standard Set type is defined and it has a forEach method
function uniqSetWithForEach(arr) {
	var ret = [];

	(new Set(arr)).forEach(function (el) {
		ret.push(el);
	});

	return ret;
}

if ('Set' in global) {
	if (typeof Set.prototype.forEach === 'function') {
		module.exports = uniqSetWithForEach;
	} else {
		module.exports = uniqSet;
	}
} else {
	module.exports = uniqNoSet;
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],3:[function(require,module,exports){
var pSlice = Array.prototype.slice;
var objectKeys = require('./lib/keys.js');
var isArguments = require('./lib/is_arguments.js');

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return true;
}

},{"./lib/is_arguments.js":4,"./lib/keys.js":5}],4:[function(require,module,exports){
var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};

},{}],5:[function(require,module,exports){
exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}

},{}],6:[function(require,module,exports){
/*!
 * omit-key <https://github.com/jonschlinkert/omit-key>
 *
 * Copyright (c) 2014 Jon Schlinkert, contributors.
 * Licensed under the MIT License
 */

'use strict';

var isObject = require('isobject');
var difference = require('array-difference');

module.exports = function omit(obj, keys) {
  if (!isObject(obj)) {
    return {};
  }

  var props = Object.keys(obj);
  var len = props.length;

  keys = Array.isArray(keys) ? keys : [keys];
  var diff = difference(props, keys);
  var o = {};

  for (var i = 0; i < len; i++) {
    var key = diff[i];

    if (obj.hasOwnProperty(key)) {
      o[key] = obj[key];
    }
  }
  return o;
};
},{"array-difference":7,"isobject":8}],7:[function(require,module,exports){
(function(global) {

	var indexOf = Array.prototype.indexOf || function(elem) {
		var idx, len;

		if (this == null) {
			throw new TypeError("indexOf called on null or undefined");
		}

		for (idx = 0, len = this.length; idx < len; ++idx) {
			if (this[idx] === elem) {
				return idx;
			}
		}

		return -1;
	};

	function difference(a, b) {
		var idx, len;
		var res = [];

		for (idx = 0, len = a.length; idx < len; ++idx) {
			if (indexOf.call(b, a[idx]) === -1) {
				res.push(a[idx]);
			}
		}
		for (idx = 0, len = b.length; idx < len; ++idx) {
			if (indexOf.call(a, b[idx]) === -1) {
				res.push(b[idx]);
			}
		}
		return res;
	}

	if (typeof module === "object" && module.exports) {
		module.exports = difference;
	} else if (typeof define === "function" && define.amd) {
		define(function() {
			return difference;
		});
	} else {
		global.difference = difference;
	}

}(this));

},{}],8:[function(require,module,exports){
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014 Jon Schlinkert, contributors.
 * Licensed under the MIT License
 */

'use strict';

/**
 * is the value an object, and not an array?
 *
 * @param  {*} `value`
 * @return {Boolean}
 */

module.exports = function isObject(o) {
  return o != null && typeof o === 'object'
    && !Array.isArray(o);
};
},{}],9:[function(require,module,exports){
function Cursor(t,e,u){this.value=u,this.pendingValue=function(){return util.getRefAtPath(t._pendingState||t.state,e)},this.onChange=function(t){Cursor.debug===!0&&console.warn("'onChange' is deprecated use 'set' instead!"),this.set(t)},this.set=update.bind(this,t,e,"$set"),this.refine=function(){var u=[].concat(e,util.flatten(arguments)),i=util.getRefAtPath(this.value,Array.prototype.slice.call(arguments,0));return build(t,u,i)}}function update(t,e,u,i){var r;e.length>0?r=React.addons.update(t._pendingState||t.state,e.concat(u).reduceRight(util.unDeref,i)):0===e.length&&(r=i),t.setState(r)}var React=require("react/addons"),util=require("./util"),cursorBuildMemoizer=util.memoizeFactory(function(t,e,u){return e=void 0===e?[]:e,u=u||util.getRefAtPath(t.state,e),util.refToHash(t)+util.hashRecord(u)+util.hashRecord(e)}),build=cursorBuildMemoizer(function(t,e,u){return e=void 0===e?[]:e,u=u||util.getRefAtPath(t.state,e),new Cursor(t,e,u)});Cursor.build=build,Cursor.debug=!1,module.exports=Cursor;
},{"./util":13,"react/addons":"react/addons"}],10:[function(require,module,exports){
function ImmutableOptimizations(i,t){return t=void 0===t?[]:t,{shouldComponentUpdate:function(u){var n=!utils.isEqual(utils.omit(u,utils.union(i,t)),utils.omit(this.props,utils.union(i,t))),o=!i.every(function(i){return this.props[i]===u[i]}.bind(this));return n||o}}}var utils=require("./util");module.exports=ImmutableOptimizations;
},{"./util":13}],11:[function(require,module,exports){
"use strict";Function.prototype.bind||(Function.prototype.bind=function(t){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var r=Array.prototype.slice.call(arguments,1),o=this,n=function(){},e=function(){return o.apply(this instanceof n&&t?this:t,r.concat(Array.prototype.slice.call(arguments)))};return n.prototype=this.prototype,e.prototype=new n,e}),Object.keys||(Object.keys=function(){var t=Object.prototype.hasOwnProperty,r=!{toString:null}.propertyIsEnumerable("toString"),o=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],n=o.length;return function(e){if("object"!=typeof e&&("function"!=typeof e||null===e))throw new TypeError("Object.keys called on non-object");var i,p,y=[];for(i in e)t.call(e,i)&&y.push(i);if(r)for(p=0;n>p;p++)t.call(e,o[p])&&y.push(o[p]);return y}}()),Array.prototype.find||(Array.prototype.find=function(t){if(null==this)throw new TypeError("Array.prototype.find called on null or undefined");if("function"!=typeof t)throw new TypeError("predicate must be a function");for(var r,o=Object(this),n=o.length>>>0,e=arguments[1],i=0;n>i;i++)if(r=o[i],t.call(e,r,i,o))return r;return void 0}),Array.prototype.every||(Array.prototype.every=function(t,r){var o,n;if(null==this)throw new TypeError("this is null or not defined");var e=Object(this),i=e.length>>>0;if("function"!=typeof t)throw new TypeError;for(arguments.length>1&&(o=r),n=0;i>n;){var p;if(n in e){p=e[n];var y=t.call(o,p,n,e);if(!y)return!1}n++}return!0});
},{}],12:[function(require,module,exports){
var Cursor=require("./Cursor"),ImmutableOptimizations=require("./ImmutableOptimizations");module.exports={Cursor:Cursor,ImmutableOptimizations:ImmutableOptimizations};
},{"./Cursor":9,"./ImmutableOptimizations":10}],13:[function(require,module,exports){
"use strict";function getRefAtPath(e,r){return reduce(r,deref,e)}function deref(e,r){return e[r]}function unDeref(e,r){var t={};return t[r]=e,t}function initial(e){return e.slice(0,e.length-1)}function last(e){return e[e.length-1]}function reduce(e,r,t){return e.reduce(r,t)}function flatten(e){return[].concat.apply([],e)}function pairs(e){for(var r=Object.keys(e),t=r.length,n=Array(t),a=0;t>a;a++)n[a]=[r[a],e[r[a]]];return n}function hashString(e){var r,t,n,a=0;if(void 0===e||null===e)return e;if(0===e.length)return a;for(r=0,n=e.length;n>r;r++)t=e.charCodeAt(r),a=(a<<5)-a+t,a|=0;return a}function generateUUID(){var e=(new Date).getTime(),r="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(r){var t=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"==r?t:7&t|8).toString(16)});return r}function hashRecord(e){return hashString(JSON.stringify(e))}function refToHash(e){var r=pairs(refsCache),t=r.find(function(r){return r[1]===e});if(t)return t[0];var n=generateUUID();return refsCache[n]=e,n}function memoizeFactory(e){function r(r){return function(){var n=e?e.apply(this,arguments):arguments[0];return hasOwnProperty.call(t,n)?t[n]:t[n]=r.apply(this,arguments)}}var t={};return r}require("./polyfills");var isEqual=require("deep-equal"),union=require("array-union"),omit=require("omit-keys"),refsCache={};module.exports={getRefAtPath:getRefAtPath,deref:deref,unDeref:unDeref,initial:initial,last:last,reduce:reduce,flatten:flatten,pairs:pairs,hashString:hashString,generateUUID:generateUUID,hashRecord:hashRecord,refToHash:refToHash,memoizeFactory:memoizeFactory,isEqual:isEqual,union:union,omit:omit};
},{"./polyfills":11,"array-union":1,"deep-equal":3,"omit-keys":6}]},{},[12]);
